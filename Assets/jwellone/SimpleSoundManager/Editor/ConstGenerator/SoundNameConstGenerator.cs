using System.IO;
using System.Text;
using System.Linq;
using UnityEditor;

namespace jwelloneEditor
{
    public class SoundNameConstGenerator : AssetPostprocessor
    {
        const string _fileName = "SoundNameConst.autogenerated.cs";
        static readonly string _outputPath = $"Assets/{_fileName}";
        static readonly string[] _targetExtensions = new string[] { ".mp3", ".wav", ".ogg" };

        [MenuItem("jwellone/Sound/Create " + _fileName)]
        static void OnCreateMenu()
        {
            Create();
        }

        static void OnPostprocessAllAssets(string[] importedAssets, string[] deletedAssets, string[] movedAssets, string[] movedFromAssetPaths)
        {
            foreach (var asset in importedAssets)
            {
                var extension = Path.GetExtension(asset);
                if (_targetExtensions.Any(_ => extension == _))
                {
                    Create();
                    return;
                }
            }

            foreach (var asset in deletedAssets)
            {
                var extension = Path.GetExtension(asset);
                if (_targetExtensions.Any(_ => extension == _))
                {
                    Create();
                    return;
                }
            }
        }

        static void Create()
        {
            var sb = new StringBuilder();
            sb.AppendLine("public static partial class SoundNameConst");
            sb.AppendLine("{");

            var guids = AssetDatabase.FindAssets("t:audioclip");
            foreach (var guid in guids)
            {
                var assetPath = AssetDatabase.GUIDToAssetPath(guid);
                var fileName = Path.GetFileNameWithoutExtension(assetPath);
                sb.AppendLine($"\tpublic static readonly string {fileName.ToUpper()} = \"{fileName}\";");
            }

            sb.Append("}");

            SoundConstGenerator.Write(_outputPath, sb.ToString());
        }
    }
}